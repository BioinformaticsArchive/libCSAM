
#ifndef _CQUALNS_H
#define _CQUALNS_H

#include <cmath>
#include <algorithm>
#include "CQual.h"


class CQualNStore : public CQual{

	public:
		/*Compress the quality vector, given the fidelity param lossyparam
		 * m: 0- Using a P value
		 * 		1- Using a R value  
		 **/
		CQualNStore(vector<string> QUAL, vector<RPP> rpp, int m);
		virtual ~CQualNStore();
		virtual cds_word getSize() const;
		
		/*get quality lines x to y*/
		virtual vector<string> getInterval(cds_word x, cds_word y) const;

		/** Stores the Compressed Quality given a file pointer. */
		virtual void Save(ofstream &fp) const;

		virtual string * getAllQual() const;

		/** Reads a CQual file determining the type. */
		static CQualNStore *Load(ifstream &fp);


	protected:
		cds_word sizeQualLine;
		cds_word QualValue;
		cds_word numberOfLines; //total number of quality lines stored
	
	private:
		CQualNStore();

		cds_word getPQualValue(vector<string> QUAL, vector<RPP> rpp);
		cds_word getRQualValue(vector<string> QUAL, vector<RPP> rpp);

};


#endif
