#include "./../Cqual/CQual.h"


int main (int argc, char *argv[]){
	CQual *cqual;
	cds_word *Permutation = NULL;
	cds_word lengthPer = 0, NumberofLines = 0, bitsPer = 0; 
	bool reorder = false;
	if(argc!=2){
		cout << "Use: ./TestLoadQual <arch>" << endl;
		return 0;
	}
	/*load info*/
	ifstream fileQual;
	fileQual.open(argv[1]);
	cqual = CQual::Load(fileQual);
	cout << "Size in MB: " <<  ((cqual->getSize()*1.0)/1048576) << endl;
	reorder = LoadValue<bool>(fileQual);
	if(reorder){
		NumberofLines = LoadValue<cds_word>(fileQual);
		bitsPer =  (cds_word)(ceil(log2(NumberofLines)));
		lengthPer = (bitsPer * NumberofLines + kWordSize - 1) / kWordSize;
		Permutation = LoadValue<cds_word>(fileQual, lengthPer);
	}
	fileQual.close();
	
	/*generate .qual file*/
	ofstream fileDecomQual;
	fileDecomQual.open("fileSAM.tmp");
	
	cqual->generate(fileUncomQual);
	fileUncomQual.close();
	
	delete cqual;
	delete [] Permutation;
	return 0;
}

